{"version":3,"sources":["reader/reader.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Reader","clickToNextChap","url","nextChap","React","useState","imageUrl","id","images","setImages","i","setI","setChapEnded","atEnd","className","onClick","map","image","onError","src","alt","toString","imageNumber","console","log","App","imageBaseUrl","comicName","setComicName","setUrl","chapter","setChapter","updateUrl","search","e","a","preventDefault","onSubmit","type","name","placeholder","value","onChange","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAgDeA,EAxCsB,SAAC,GAAuB,IA6BrDC,EA7BgCC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,SAAe,EAE5BC,IAAMC,SAAS,CAAC,CAAEC,SAAS,GAAD,OAAKJ,EAAL,WAAmBK,GAAI,KAFrB,mBAEjDC,EAFiD,KAEzCC,EAFyC,OAGtCL,IAAMC,SAAiB,GAHe,mBAGjDK,EAHiD,KAG9CC,EAH8C,OAItBP,IAAMC,UAAS,GAJO,mBAItCO,GAJsC,WAiBlDC,EAAQ,WAIVD,GAAa,IAYjB,OAFIX,EAAmB,wBAAQM,GAAG,YAAYO,UAAU,SAASC,QAR3C,WAClBJ,EAAK,GACLC,GAAa,GACbH,EAAU,CAAC,CAAEH,SAAS,GAAD,OAAKJ,EAAL,WAAmBK,GAAI,KAC5CJ,KAImB,0BAEf,gCACHK,EAAOQ,KAAI,SAAAC,GAAK,OAAI,qBAAqCC,QAASL,EAAOC,UAAU,QAAQK,IAAKF,EAAMX,SAAUc,IAAI,IAAtFH,EAAMX,SAASe,eAC9C,wBAAQd,GAAG,WAAWO,UAAU,SAASC,QA5B7B,WACZJ,EAAKD,EAAI,GACT,IAAIY,EAAsBZ,EAAEW,WACxBX,EAAI,KACJY,EAAW,WAAOZ,IAEtB,IAAMJ,EAAQ,UAAMJ,EAAN,YAAaoB,EAAb,QACdb,EAAU,GAAD,mBAAKD,GAAL,CAAa,CAAEF,WAAUC,GAAIG,MACtCa,QAAQC,IAAId,IAoBZ,kBACCT,MCmBMwB,MA3Df,WAGE,IACMC,EAAY,UADF,8BACE,kBAJL,EAOqBtB,IAAMC,SAAS,IAPpC,mBAONsB,EAPM,KAOKC,EAPL,OAQSxB,IAAMC,SAAS,IARxB,mBAQNH,EARM,KAQD2B,EARC,OASiBzB,IAAMC,SAAS,GAThC,mBASNyB,EATM,KASGC,EATH,KAWPC,EAAY,WAChBH,EAAO,GAAD,OAAIH,EAAJ,YAAoBC,EAApB,qBAA0CG,IAChDP,QAAQC,IAAI,QAAUM,GACtBP,QAAQC,IAAI,OAAStB,IAEjB+B,EAAM,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACbD,EAAEE,iBAKFJ,IANa,2CAAH,sDAgBZ,OACE,sBAAKlB,UAAU,MAAf,UACE,uBAAMA,UAAU,OAAOuB,SAAUJ,EAAjC,UACE,uBAAOnB,UAAU,QACfwB,KAAK,OACLC,KAAK,QACLC,YAAY,wBACZC,MAAOd,EACPe,SAAU,SAACR,GAAQN,EAAaM,EAAES,OAAOF,UACzC,wBAEF,uBAAO3B,UAAU,QACfwB,KAAK,OACLC,KAAK,UACLC,YAAY,UACZC,MAAOX,EACPY,SAAU,SAACR,GAAQH,GAAYG,EAAES,OAAOF,UAC1C,wBAAQ3B,UAAU,SAASwB,KAAK,SAAhC,uBAEF,wBAGA,cAAC,EAAD,CAAQpC,IAAKA,EAAKC,SA9BL,WACfoB,QAAQC,IAAI,gBACZD,QAAQC,IAAI,eAAiBM,GAC7BC,GAAW,SAAAD,GAAO,OAAIA,EAAU,KAChCP,QAAQC,IAAI,eAAiBM,GAC7BE,WCnBWY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c4de5a62.chunk.js","sourcesContent":["import React from 'react';\nimport './reader.css'\n\ninterface readerProp {\n    url: string,\n    nextChap: Function\n}\n\nconst Reader: React.FC<readerProp> = ({ url, nextChap }) => {\n\n    const [images, setImages] = React.useState([{ imageUrl: `${url}/01.jpg`, id: 1 }]);\n    const [i, setI] = React.useState<number>(1);\n    const [chapEnded, setChapEnded] = React.useState(false);\n    // setImages([`${url}/01.jpg`]);\n\n    const oneMore = () => {\n        setI(i + 1);\n        let imageNumber: string = i.toString();\n        if (i < 10) {\n            imageNumber = `0${i}`;\n        }\n        const imageUrl = `${url}/${imageNumber}.jpg`;\n        setImages([...images, { imageUrl, id: i }]);\n        console.log(i);\n    }\n    const atEnd = () => {\n        // console.log(\"ERROR\")\n        // nextChap();\n        // console.log({ e })\n        setChapEnded(true);\n    }\n    const toNextChapter = () => {\n        setI(1)\n        setChapEnded(false);\n        setImages([{ imageUrl: `${url}/01.jpg`, id: 1 }]);\n        nextChap();\n    }\n    let clickToNextChap;\n    // if (chapEnded) {\n        clickToNextChap = (<button id=\"next-chap\" className=\"search\" onClick={toNextChapter} >next chapter</button>);\n    // }\n    return (<div>\n        {images.map(image => <img key={image.imageUrl.toString()} onError={atEnd} className=\"image\" src={image.imageUrl} alt=\"\"></img>)}\n        <button id=\"next-img\" className=\"search\" onClick={oneMore} >next</button>\n        {clickToNextChap}\n    </div>);\n}\n\nexport default Reader;","import React from 'react';\nimport './App.css';\nimport Reader from './reader/reader';\n\nfunction App() {\n  // const domain = \"https://readcomiconline.to/Comic\";\n  // const domain = \"https://readcomicsonline.ru/comic\";\n  const baseUrl = \"https://readcomicsonline.ru\";\n  const imageBaseUrl = `${baseUrl}/uploads/manga`;\n  // const comicBaseUrl = `${baseUrl}/comics`;\n\n  const [comicName, setComicName] = React.useState('');\n  const [url, setUrl] = React.useState('');\n  const [chapter, setChapter] = React.useState(1);\n\n  const updateUrl = () => {\n    setUrl(`${imageBaseUrl}/${comicName}/chapters/${chapter}`)\n    console.log(\"chap:\" + chapter);\n    console.log(\"url:\" + url);\n  }\n  const search = async (e: React.FormEvent) => {\n    e.preventDefault();\n    //https://readcomicsonline.ru/search?query=blabla\n\n    // setUrl(`${domain}/${comicName}`)\n    // const html = await fetch(`${comicBaseUrl}/${comicName}`);\n    updateUrl();\n  }\n  const nextChap = () => {\n    console.log(\"next chapter\");\n    console.log(\"avant: chap:\" + chapter);\n    setChapter(chapter => chapter + 1);\n    console.log(\"apres: chap:\" + chapter);\n    updateUrl();\n  }\n\n  return (\n    <div className=\"App\">\n      <form className=\"form\" onSubmit={search}>\n        <input className=\"input\"\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"i.e. darth-vader-2017\"\n          value={comicName}\n          onChange={(e) => { setComicName(e.target.value) }}></input>\n          <div>\n          </div>\n        <input className=\"input\"\n          type=\"text\"\n          name=\"chapter\"\n          placeholder=\"i.e. 11\"\n          value={chapter}\n          onChange={(e) => { setChapter(+e.target.value) }}></input>\n        <button className=\"search\" type=\"submit\">Search</button>\n      </form>\n      <div>\n\n      </div>\n      <Reader url={url} nextChap={nextChap}></Reader>\n    </div >\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}